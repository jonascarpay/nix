snippet sd
	{-# LANGUAGE StandaloneDeriving #-}

snippet tf
	{-# LANGUAGE TypeFamilies #-}

snippet mptc
	{-# LANGUAGE MultiParamTypeClasses #-}

snippet fc
	{-# LANGUAGE FlexibleContexts #-}

snippet rnt
	{-# LANGUAGE RankNTypes #-}

snippet gadt
	{-# LANGUAGE GADTs #-}

snippet stv
	{-# LANGUAGE ScopedTypeVariables #-}

snippet lc
	{-# LANGUAGE LambdaCase #-}

snippet th
	{-# LANGUAGE TemplateHaskell #-}

snippet ps
	{-# LANGUAGE PatternSynonyms #-}

snippet fi
	{-# LANGUAGE FlexibleInstances #-}

snippet fc
	{-# LANGUAGE FlexibleContexts #-}

snippet ks
	{-# LANGUAGE KindSignatures #-}

snippet nmr
	{-# LANGUAGE NoMonomorphismRestriction #-}

snippet gnd
	{-# LANGUAGE GeneralizedNewtypeDeriving #-}

snippet u
	undefined

snippet i
	instance

snippet w
	where

snippet des
	deriving (Eq, Show)

snippet hlint
	{-# ANN module "hlint: ignore" #-}

snippet td
	${1:fn} :: a
	$1 = error "$1: not yet implemented"

snippet nt
	newtype ${1:Wrap} = $1 { un$1 :: ${2} }

snippet iq
	import qualified ${1} as ${0}
